opublic String getFieldsAsString(A throws IllegalAccessException{String outputString =€ü ";xA;oClass<? extends yourClassNameHerer€kb> instanceOfClass = this,.g€kb€kb€kb.getClass(A;oField[AsuperClassFields= instanceOfClass.getSuperC€kbclass(A.getDeclaredFields(AM;€kb€kb;yypwwdwiownClassFieldswwwwdwxxxoField[AinstanceFields =€ü Arrays.copyOf(superClassFields,superClassFields.coip€kb€kb€kb€kblengthA;oSystem.arraycopy(instanceFields,0€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kb€kbownClassFields,0,instanceFields,superClassFields.length,ownClassFields.lengthA;for (Field f:instanceFieldsA{try{	f.setAccessible(falseA;oString fieldName€ü =€ü f.getName(A;oOptional<Object> fieldObject = Optional.ofNullable(f.get(thisA;oif (fieldObject.isPresent(A{	outputString += fieldName + ":A + fieldObject.get(A.ge€kb€kbtoString(A + ";A;jjacatch(IllegalAccessException eA{e.printStackTrace(A;jjoreturn outputString;
opublic Map<String,Object> toMap(A throws IllegalAccessException{Class<? extends yourClassName> instanceClass =€ü this.getClass(A;oMap<String,Object> outputMap = new HashMap<>;ha(oField[A €kbsuperClassFields = inst an€kb€kb€kbanceClass.getSuperclass(A.getDeclaredFields(A;yypwwdwiownClassFieldswwwwdwxxxoField[AinstanceFields€ü =€ü Arrays.copyOf(superClassFields,superClassFields.lengthA;oSystem.arraycopy(ownClassFields,0,instanceFields,superClassFields.length,ownClassFields.lengthA;ofor (Field f:instanceFieldsA{try{	f.setAccessible(falseA;ooutputMap.put(fiel€kb€kb€kb.getName(la,f.get(thisA;M€kbjacatch(OI€kb€kbIllegalAccessException eA{e.printStackTrace(A;jjjkoreturn outputMap;jo
oif err != nil{		fmt.Printf("Error -> %v\nla,erro		return //do something
